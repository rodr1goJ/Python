import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QWidget,QGridLayout
from PyQt5.QtWidgets import QPushButton, QLineEdit,QSizePolicy

class Calculadora(QMainWindow):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle('Calculadora Gear') #definiu o titulo da barra
        self.setFixedSize(400,400)  #Setou o tamanho da janela
        self.cw = QWidget()
        self.grid= QGridLayout(self.cw)
        self.display = QLineEdit() #criando display
        self.grid.addWidget(self.display,0,0,1,5)
        self.display.setDisabled(True)
        self.display.setStyleSheet(
            '*{background: white; color: #000; font-size: 30px};'
        )
        self.display.setSizePolicy(QSizePolicy.Preferred, QSizePolicy.Expanding)#fez a caixa de texto ocupar o maior espaçp possivel

        self.add_btn(QPushButton('7'),1,0,1,1)
        self.add_btn(QPushButton('8'), 1, 1, 1, 1)
        self.add_btn(QPushButton('9'), 1, 2, 1, 1)
        self.add_btn(QPushButton('+'), 1, 3, 1, 1)
        self.add_btn(QPushButton('c'), 1, 4, 1, 1, lambda: self.display.setText(''),'background: red;'
                     )#criou uma funcao anonima onde limpa a caixa de texto

        self.add_btn(QPushButton('4'), 2, 0, 1, 1)
        self.add_btn(QPushButton('5'), 2, 1, 1, 1)
        self.add_btn(QPushButton('6'), 2, 2, 1, 1)
        self.add_btn(QPushButton('-'), 2, 3, 1, 1)
        self.add_btn(QPushButton('<'), 2, 4, 1, 1,lambda: self.display.setText(self.display.text()[:-1]
                            )#criou uma função anonima para apagar  ultimo valor digitado
                )

        self.add_btn(QPushButton('1'), 3, 0, 1, 1)
        self.add_btn(QPushButton('2'), 3, 1, 1, 1)
        self.add_btn(QPushButton('3'), 3, 2, 1, 1)
        self.add_btn(QPushButton('/'), 3, 3, 1, 1)
        self.add_btn(QPushButton(''), 3, 4, 1, 1)

        self.add_btn(QPushButton(''), 4, 0, 1, 1)
        self.add_btn(QPushButton('0'), 4, 1, 1, 1)
        self.add_btn(QPushButton(''), 4, 2, 1, 1)
        self.add_btn(QPushButton('*'), 4, 3, 1, 1)
        self.add_btn(QPushButton('='), 4, 4, 1, 1, self.eval_igual)

        self.setCentralWidget(self.cw) #definiu o cw como widget central

    def add_btn(self, btn,row,col,rowspan,colspan,funcao=None,style=None):# criando um metodo para incçuir botoes
        self.grid.addWidget(btn,row,col,rowspan,colspan)#vai enviar um botão, para linha, coluna do grid
        if not funcao:
            btn.clicked.connect(
                lambda: self.display.setText(
                self.display.text()+btn.text()
            )
        )

        else:
            btn.clicked.connect(funcao)


        if style:
            btn.setStyleSheet(style)
        btn.setSizePolicy(QSizePolicy.Preferred, QSizePolicy.Expanding)

    def eval_igual(self):
        try:
            self.display.setText(
                str(eval(self.display.text()))
            )
        except Exception as e:
            self.display.setText('conta invalida')

if __name__ =='__main__':
    qt=QApplication(sys.argv)
    calc = Calculadora()
    calc.show()
